apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  labels:
    app: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: main
          image: sonarqube:9.9.7-community
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9000
              name: http
          volumeMounts:
            - mountPath: "/opt/sonarqube/data"
              name: sonarqube-data
            - mountPath: "/opt/sonarqube/logs"
              name: sonarqube-logs
            - mountPath: "/opt/sonarqube/extensions"
              name: sonarqube-extensions
      volumes:
        - name: sonarqube-data
          persistentVolumeClaim:
            claimName: sonarqube-data-pvc
        - name: sonarqube-logs
          persistentVolumeClaim:
            claimName: sonarqube-logs-pvc
        - name: sonarqube-extensions
          persistentVolumeClaim:
            claimName: sonarqube-extensions-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-data-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-logs-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-extensions-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-service
spec:
  type: NodePort
  selector:
    app: sonarqube
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9000
      name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarqube-ingress
spec:
  ingressClassName: nginx
  rules:
    - host: sonarqube.dew.org
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: sonarqube-service
                port:
                  number: 80
